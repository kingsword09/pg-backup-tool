# This Dockerfile builds pg_dump and pg_restore for Alpine-based systems (musl).
# It's used by the GitHub Actions workflow for static Linux builds.
ARG POSTGRESQL_VERSION
ARG PG_MAJOR_VERSION

# Use a specific Alpine version for reproducibility.
FROM alpine:3.18

ARG POSTGRESQL_VERSION
ARG PG_MAJOR_VERSION

# Install build dependencies.
RUN apk add --no-cache \
    build-base \
    gcc \
    linux-headers \
    wget \
    zlib-dev \
    openssl-dev \
    ca-certificates \
    bison \
    flex

# Create a non-root user to perform the build.
RUN adduser -D -s /bin/sh builder
USER builder
WORKDIR /home/builder

# Download and extract the PostgreSQL source code.
RUN wget "https://ftp.postgresql.org/pub/source/v${PG_MAJOR_VERSION}/postgresql-${POSTGRESQL_VERSION}.tar.gz" && \
    tar -xzf "postgresql-${POSTGRESQL_VERSION}.tar.gz"

WORKDIR /home/builder/postgresql-${POSTGRESQL_VERSION}

# Configure the build for a static environment with comprehensive options.
RUN ./configure \
    --prefix=/opt/postgresql \
    --enable-integer-datetimes \
    --enable-option-checking=fatal \
    --without-readline \
    --with-openssl \
    --with-zlib \
    --without-icu \
    --without-ldap \
    --with-pgport=5432

# Build only the required components.
RUN make -C src/common all && \
    make -C src/include all && \
    make -C src/interfaces/libpq all && \
    make -C src/bin/pg_dump all

# Create the install directory with proper permissions first
USER root
RUN mkdir -p /opt/postgresql && chown -R builder:builder /opt/postgresql
USER builder

# Install to the staging directory.
RUN make -C src/interfaces/libpq install && \
    make -C src/bin/pg_dump install

# Copy required shared libraries using ldd to find dependencies
USER root
RUN mkdir -p /opt/postgresql/lib && \
    for binary in /opt/postgresql/bin/pg_dump /opt/postgresql/bin/pg_restore; do \
      if [ -f "$binary" ]; then \
        ldd "$binary" 2>/dev/null | grep -E "(libssl|libcrypto|libz)" | awk '{print $3}' | while read lib; do \
          if [ -f "$lib" ] && [ ! -f "/opt/postgresql/lib/$(basename "$lib")" ]; then \
            cp "$lib" /opt/postgresql/lib/ 2>/dev/null || true; \
          fi; \
        done; \
      fi; \
    done

# Also include static libraries for potential static linking
RUN find /opt/postgresql -name "*.a" -exec cp {} /opt/postgresql/lib/ \; 2>/dev/null || true

USER builder
